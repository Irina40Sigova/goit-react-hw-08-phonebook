{"version":3,"file":"static/js/690.622a75f2.chunk.js","mappings":"wTAcaA,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,SAAC,IAAD,CAAMC,GAAG,WAAWC,MAAM,SAASC,QAAQ,SAASC,EAAE,QAAtD,UACE,SAAC,KAAD,CACEH,GAAG,WACHI,EAAG,EACHC,QAAQ,KACRC,EAAG,MACHC,SAAU,QACVC,IAAK,IANP,UAQE,SAAC,KAAD,CACEC,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,SArBS,SAACC,EAAUC,GAE1BhB,GAASiB,EAAAA,EAAAA,KAAM,UAAKF,KACpBC,EAAQE,WACT,EAYK,SAOG,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,OAAQC,EAAzB,EAAyBA,QAAzB,OACC,iBAAMP,SAAUK,EAAhB,UACE,UAAC,IAAD,CAAQG,QAAS,EAAGnB,MAAM,aAA1B,WACE,UAAC,KAAD,CAAaoB,YAAaH,EAAOR,OAASS,EAAQT,MAAlD,WACE,SAAC,IAAD,CAAWY,SAAS,OAApB,oBACA,SAAC,EAAAC,EAAD,CACEC,GAAIC,EAAAA,EACJC,KAAK,QACLC,KAAK,OACLC,YAAY,mBACZ5B,GAAG,WACHsB,SAAS,UAEX,SAAC,KAAD,UAAmBJ,EAAOQ,WAE5B,UAAC,KAAD,CAAaL,YAAaH,EAAOP,UAAYQ,EAAQR,SAArD,WACE,SAAC,IAAD,CAAWkB,QAAQ,WAAWP,SAAS,OAAvC,uBAGA,SAAC,EAAAC,EAAD,CACEC,GAAIC,EAAAA,EACJC,KAAK,WACLC,KAAK,WACLC,YAAY,WACZ5B,GAAG,WACHsB,SAAS,UAEX,SAAC,KAAD,UAAmBJ,EAAOP,eAE5B,SAAC,IAAD,CACEgB,KAAK,SACLG,YAAY,SACZR,SAAS,OACTS,MAAM,OAJR,uBA7BL,OA4CV,E,UC/Ec,SAASC,IACtB,IAAMC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,GAE1B,OACE,4BACE,sCACA,SAACxC,EAAD,IACCoC,IAAcG,IAAS,wCAG7B,C","sources":["components/LoginForm/LoginForm.jsx","pages/Login.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Input,\n  VStack,\n} from '@chakra-ui/react';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const onSubmit = (formData, actions) => {\n    // alert(JSON.stringify(formData));\n    dispatch(logIn({ ...formData }));\n    actions.resetForm();\n  };\n\n  return (\n    <Flex bg=\"blue.100\" align=\"center\" justify=\"center\" h=\"100vh\">\n      <Box\n        bg=\"blue.200\"\n        p={8}\n        rounded=\"md\"\n        w={'20%'}\n        position={'fixed'}\n        top={250}\n      >\n        <Formik\n          initialValues={{\n            email: '',\n            password: '',\n          }}\n          onSubmit={onSubmit}\n        >\n          {({ handleSubmit, errors, touched }) => (\n            <form onSubmit={handleSubmit}>\n              <VStack spacing={4} align=\"flex-start\">\n                <FormControl isInvalid={!!errors.email && touched.email}>\n                  <FormLabel fontSize=\"30px\">Email</FormLabel>\n                  <Input\n                    as={Input}\n                    name=\"email\"\n                    type=\"text\"\n                    placeholder=\"myemail@mail.com\"\n                    bg=\"blue.100\"\n                    fontSize=\"20px\"\n                  />\n                  <FormErrorMessage>{errors.name}</FormErrorMessage>\n                </FormControl>\n                <FormControl isInvalid={!!errors.password && touched.password}>\n                  <FormLabel htmlFor=\"password\" fontSize=\"30px\">\n                    Password\n                  </FormLabel>\n                  <Input\n                    as={Input}\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    bg=\"blue.100\"\n                    fontSize=\"20px\"\n                  />\n                  <FormErrorMessage>{errors.password}</FormErrorMessage>\n                </FormControl>\n                <Button\n                  type=\"submit\"\n                  colorScheme=\"yellow\"\n                  fontSize=\"20px\"\n                  width=\"100%\"\n                >\n                  Login\n                </Button>\n              </VStack>\n            </form>\n          )}\n        </Formik>\n      </Box>\n    </Flex>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { useSelector } from 'react-redux';\nimport { selectErrorUser, selectIsLoadingUser } from 'redux/auth/selectors';\n\nexport default function Login() {\n  const isLoading = useSelector(selectIsLoadingUser);\n  const error = useSelector(selectErrorUser);\n\n  return (\n    <div>\n      <title>Login</title>\n      <LoginForm />\n      {isLoading && !error && <b>Loading...</b>}\n    </div>\n  );\n}\n"],"names":["LoginForm","dispatch","useDispatch","bg","align","justify","h","p","rounded","w","position","top","initialValues","email","password","onSubmit","formData","actions","logIn","resetForm","handleSubmit","errors","touched","spacing","isInvalid","fontSize","I","as","Input","name","type","placeholder","htmlFor","colorScheme","width","Login","isLoading","useSelector","selectIsLoadingUser","error","selectErrorUser"],"sourceRoot":""}