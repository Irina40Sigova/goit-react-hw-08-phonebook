{"version":3,"file":"static/js/445.e45e892b.chunk.js","mappings":"wTAGIA,GAAiBC,EAAAA,EAAAA,GAAW,CAC9BC,YAAa,iBACbC,MAAsBC,EAAAA,EAAAA,MAAK,IAAK,CAAEC,KAAM,eAAgBC,SAAU,EAChDC,EAAAA,EAAAA,KAAI,OAAQ,CAAEC,EAAG,kMACjBD,EAAAA,EAAAA,KAAI,OAAQ,CAAEC,EAAG,sMCA/BC,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGNC,GAASC,EAAAA,EAAAA,IAAO,CACpBJ,MAAMK,EAAAA,EAAAA,MACHC,SAAS,oBACTC,IAAI,EAAG,cACPC,IAAI,GAAI,aACXP,OAAOI,EAAAA,EAAAA,MAASJ,MAAM,iBAAiBK,SAAS,qBAChDJ,UAAUG,EAAAA,EAAAA,MAASC,SAAS,0BAGjBG,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,SAAC,IAAD,CAAMC,GAAG,WAAWC,MAAM,SAASC,QAAQ,SAASC,EAAE,QAAtD,UACE,SAAC,KAAD,CACEC,EAAG,GACHC,QAAQ,KACRL,GAAG,WACHM,SAAU,QACVC,IAAK,IACLC,EAAG,MANL,UAQE,SAAC,KAAD,CACEC,SAhBa,SAACC,EAAUC,GAC9Bb,GAASc,EAAAA,EAAAA,KAAS,UAAKF,KACvBC,EAAQE,WACT,EAcO1B,cAAeA,EACf2B,iBAAkBvB,EAHpB,UAKE,UAAC,IAAD,CAAQU,MAAM,aAAac,QAAS,EAApC,WACE,SAAC,IAAD,CAAWC,QAAQ,OAAOC,SAAS,OAAnC,uBAGA,SAAC,EAAAC,EAAD,CACE9B,KAAK,OACL+B,KAAK,OACLC,YAAY,WACZpB,GAAG,WACHiB,SAAS,UAGX,SAAC,IAAD,CAAWD,QAAQ,QAAQC,SAAS,OAApC,4BAGA,SAAC,EAAAC,EAAD,CACE9B,KAAK,QACL+B,KAAK,QACLC,YAAY,gBACZpB,GAAG,WACHiB,SAAS,UAEX,SAAC,IAAD,CAAWD,QAAQ,WAAWC,SAAS,OAAvC,uBAGA,SAAC,EAAAC,EAAD,CACE9B,KAAK,WACL+B,KAAK,WACLC,YAAY,WACZpB,GAAG,WACHiB,SAAS,UAEX,SAAC,IAAD,CACEI,YAAY,SACZC,MAAM,OACNC,OAAO,OACPN,SAAS,OACTO,WAAW,SAAC9C,EAAD,IACXyC,KAAK,SANP,8BAeX,E,UCxFc,SAASM,IACtB,IAAMC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,GAE1B,OACE,4BACE,6CACA,SAACjC,EAAD,IACC6B,IAAcG,IAAS,wCAG7B,C,4GCPD,SAASlD,EAAWoD,GAClB,MAKIA,EAJFC,QAAAA,OADF,MACY,YADZ,EAEKC,EAGDF,EAHF7C,EACAN,EAEEmD,EAFFnD,YAHF,EAKImD,EADFG,aAAAA,OAJF,MAIiB,CAAC,EAJlB,EAMMrD,EAAOsD,EAAAA,SAAAA,QAAiBJ,EAAQlD,MAChCuD,GAAOC,EAAAA,EAAAA,IAAW,SAACC,EAAOC,GAAR,OAAgCtD,EAAAA,EAAAA,KAAIuD,EAAAA,GAAD,QAAC,gBAAQD,IAAAA,EAAKP,QAAAA,GAAYE,GAAiBI,GAA3C,IAAkDtD,SAAUH,EAAK4D,OAAS5D,GAAuBI,EAAAA,EAAAA,KAAI,OAAQ,CAAEF,KAAM,eAAgBG,EAAG+C,MAA3K,IAExB,OADAG,EAAKxD,YAAcA,EACZwD,CACR,C","sources":["../node_modules/@chakra-ui/icons/dist/chunk-KRS2VCGE.mjs","components/RegisterForm/RegisterForm.jsx","pages/Register.js","../node_modules/@chakra-ui/icon/dist/chunk-QODHG6BI.mjs"],"sourcesContent":["// src/ArrowRight.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar ArrowRightIcon = createIcon({\n  displayName: \"ArrowRightIcon\",\n  path: /* @__PURE__ */ jsxs(\"g\", { fill: \"currentColor\", children: [\n    /* @__PURE__ */ jsx(\"path\", { d: \"M13.584,12a2.643,2.643,0,0,1-.775,1.875L3.268,23.416a1.768,1.768,0,0,1-2.5-2.5l8.739-8.739a.25.25,0,0,0,0-.354L.768,3.084a1.768,1.768,0,0,1,2.5-2.5l9.541,9.541A2.643,2.643,0,0,1,13.584,12Z\" }),\n    /* @__PURE__ */ jsx(\"path\", { d: \"M23.75,12a2.643,2.643,0,0,1-.775,1.875l-9.541,9.541a1.768,1.768,0,0,1-2.5-2.5l8.739-8.739a.25.25,0,0,0,0-.354L10.934,3.084a1.768,1.768,0,0,1,2.5-2.5l9.541,9.541A2.643,2.643,0,0,1,23.75,12Z\" })\n  ] })\n});\n\nexport {\n  ArrowRightIcon\n};\n","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { object, string } from 'yup';\nimport { Formik } from 'formik';\nimport { Box, Button, Flex, FormLabel, Input, VStack } from '@chakra-ui/react';\nimport { ArrowRightIcon } from '@chakra-ui/icons';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst Schema = object({\n  name: string()\n    .required('Name is required')\n    .min(2, 'Too Short!')\n    .max(25, 'Too Long!'),\n  email: string().email('Invalid email').required('Email is required'),\n  password: string().required('Password is required'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (formData, actions) => {\n    dispatch(register({ ...formData }));\n    actions.resetForm();\n  };\n\n  return (\n    <Flex bg=\"blue.100\" align=\"center\" justify=\"center\" h=\"100vh\">\n      <Box\n        p={16}\n        rounded=\"md\"\n        bg=\"blue.400\"\n        position={'fixed'}\n        top={250}\n        w={'20%'}\n      >\n        <Formik\n          onSubmit={handleSubmit}\n          initialValues={initialValues}\n          validationSchema={Schema}\n        >\n          <VStack align=\"flex-start\" spacing={5}>\n            <FormLabel htmlFor=\"name\" fontSize=\"30px\">\n              Username\n            </FormLabel>\n            <Input\n              name=\"name\"\n              type=\"name\"\n              placeholder=\"Username\"\n              bg=\"blue.100\"\n              fontSize=\"20px\"\n            />\n\n            <FormLabel htmlFor=\"email\" fontSize=\"30px\">\n              Email Address\n            </FormLabel>\n            <Input\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Email Address\"\n              bg=\"blue.100\"\n              fontSize=\"20px\"\n            />\n            <FormLabel htmlFor=\"password\" fontSize=\"30px\">\n              Password\n            </FormLabel>\n            <Input\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              bg=\"blue.100\"\n              fontSize=\"20px\"\n            />\n            <Button\n              colorScheme=\"yellow\"\n              width=\"100%\"\n              height=\"50px\"\n              fontSize=\"20px\"\n              rightIcon={<ArrowRightIcon />}\n              type=\"submit\"\n            >\n              Register\n            </Button>\n          </VStack>\n        </Formik>\n      </Box>\n    </Flex>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { selectErrorUser, selectIsLoadingUser } from 'redux/auth/selectors';\n\nexport default function Register() {\n  const isLoading = useSelector(selectIsLoadingUser);\n  const error = useSelector(selectErrorUser);\n\n  return (\n    <div>\n      <title>Registration</title>\n      <RegisterForm />\n      {isLoading && !error && <b>Loading...</b>}\n    </div>\n  );\n}\n","import {\n  Icon\n} from \"./chunk-DKFDJSXF.mjs\";\n\n// src/create-icon.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { Children } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createIcon(options) {\n  const {\n    viewBox = \"0 0 24 24\",\n    d: pathDefinition,\n    displayName,\n    defaultProps = {}\n  } = options;\n  const path = Children.toArray(options.path);\n  const Comp = forwardRef((props, ref) => /* @__PURE__ */ jsx(Icon, { ref, viewBox, ...defaultProps, ...props, children: path.length ? path : /* @__PURE__ */ jsx(\"path\", { fill: \"currentColor\", d: pathDefinition }) }));\n  Comp.displayName = displayName;\n  return Comp;\n}\n\nexport {\n  createIcon\n};\n"],"names":["ArrowRightIcon","createIcon","displayName","path","jsxs","fill","children","jsx","d","initialValues","name","email","password","Schema","object","string","required","min","max","RegisterForm","dispatch","useDispatch","bg","align","justify","h","p","rounded","position","top","w","onSubmit","formData","actions","register","resetForm","validationSchema","spacing","htmlFor","fontSize","I","type","placeholder","colorScheme","width","height","rightIcon","Register","isLoading","useSelector","selectIsLoadingUser","error","selectErrorUser","options","viewBox","pathDefinition","defaultProps","Children","Comp","forwardRef","props","ref","Icon","length"],"sourceRoot":""}